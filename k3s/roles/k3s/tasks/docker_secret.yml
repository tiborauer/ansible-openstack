- name: "Namespace {{ secret_namespace }}"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_file | default(kubeconfig) }}"
    name: "{{ secret_namespace }}"
    kind: Namespace
    state: present

- name: Query sealed-secrets
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_file | default(kubeconfig) }}"
    namespace: kube-system
    kind: Pod
    label_selectors:
      - app.kubernetes.io/name = sealed-secrets
  register: res_sealedsecrets

- name: Create raw docker-secret prepared for sealed-secrets
  when: (res_sealedsecrets.resources | length == 0) or (not (res_sealedsecrets.resources[0].status.conditions | selectattr('type', 'match', 'Ready'))[0].status)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_file | default(kubeconfig) }}"
    definition:
      apiVersion: v1
      kind: secret
      metadata:
        annotations:
          sealedsecrets.bitnami.com/managed: "true"
        name: docker-secret
        namespace: "{{ secret_namespace }}"
      data:
        .dockerconfigjson: "{{ lookup('file', '/home/service/.docker/config.json') | b64encode }}"

- name: Create sealed docker-secret
  when: (res_sealedsecrets.resources | length > 0) and (res_sealedsecrets.resources[0].status.conditions | selectattr('type', 'match', 'Ready'))[0].status
  ansible.builtin.include_tasks: create_sealedsecret.yml
  vars:
    secret_name: docker-secret # pragma: allowlist secret
    secret_data:
      .dockerconfigjson: "{{ lookup('file', '/home/service/.docker/config.json') }}"
